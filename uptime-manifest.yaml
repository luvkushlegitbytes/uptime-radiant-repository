---
# Source: uptime-kuma/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: uptime-kuma-pvc
  labels:
    helm.sh/chart: uptime-kuma-2.20.0
    app.kubernetes.io/name: uptime-kuma
    app.kubernetes.io/instance: uptime-kuma
    app.kubernetes.io/version: "1.23.13"
    app.kubernetes.io/managed-by: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "4Gi"
---
# Source: uptime-kuma/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: uptime-kuma
  labels:
    helm.sh/chart: uptime-kuma-2.20.0
    app.kubernetes.io/name: uptime-kuma
    app.kubernetes.io/instance: uptime-kuma
    app.kubernetes.io/version: "1.23.13"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 3001
      targetPort: 3001
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: uptime-kuma
    app.kubernetes.io/instance: uptime-kuma
---
# Source: uptime-kuma/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
  labels:
    helm.sh/chart: uptime-kuma-2.20.0
    app.kubernetes.io/name: uptime-kuma
    app.kubernetes.io/instance: uptime-kuma
    app.kubernetes.io/version: "1.23.13"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: uptime-kuma
      app.kubernetes.io/instance: uptime-kuma
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: uptime-kuma
        app.kubernetes.io/instance: uptime-kuma
    spec:
      automountServiceAccountToken: false
      serviceAccountName: default
      securityContext:
        {}
      nodeSelector:
        tenantname: duploservices-saas-ops  # Added nodeSelector
      containers:
        - name: uptime-kuma
          securityContext:
            {}
          image: "louislam/uptime-kuma:1.23.13-debian"
          imagePullPolicy: IfNotPresent
          env:
            - name: UPTIME_KUMA_PORT
              value: "3001"
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          volumeMounts:
            - mountPath: /app/data
              name: storage
          livenessProbe:
            initialDelaySeconds: 180
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
            exec:
              command:
                - extra/healthcheck
          readinessProbe:
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
            successThreshold: 1
            httpGet:
              path: /
              port: 3001
              scheme: HTTP
          resources:
            {}
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: uptime-kuma-pvc
---
# Source: uptime-kuma/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: uptime-kuma-ingress
  labels:
    helm.sh/chart: uptime-kuma-2.20.0
    app.kubernetes.io/name: uptime-kuma
    app.kubernetes.io/instance: uptime-kuma
    app.kubernetes.io/version: "1.23.13"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: uptime-kuma.example.com  # Change to your domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: uptime-kuma
                port:
                  number: 3001
---
# Source: uptime-kuma/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "uptime-kuma-test-connection"
  labels:
    helm.sh/chart: uptime-kuma-2.20.0
    app.kubernetes.io/name: uptime-kuma
    app.kubernetes.io/instance: uptime-kuma
    app.kubernetes.io/version: "1.23.13"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['uptime-kuma:3001']
  restartPolicy: Never